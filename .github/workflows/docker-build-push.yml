name: CI to DockerHub with Multi-Arch and Auto-Versioning

on:
  push:
    branches:
      - build

jobs:
  build-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # docker_platform: ['linux/amd64', 'linux/arm64/v8'] <- use runner/selfhost with arm chip to build, github action use amd64, take 1 hour to build arm image
        docker_platform: ['linux/amd64']
      fail-fast: false
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Calculate next version
        id: nextver
        run: |
          git fetch --tags
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "0.0.0")
          echo "Latest tag: $LATEST_TAG"
          if [ "$LATEST_TAG" == "0.0.0" ]; then
            NEXT_VERSION="1.0.0"
          else
            IFS='.' read -ra VER <<< "$LATEST_TAG"
            PATCH=$((VER[2]+1))
            NEXT_VERSION="${VER[0]}.${VER[1]}.$PATCH"
          fi
          echo "Next version: $NEXT_VERSION"
          echo ::set-output name=version::$NEXT_VERSION
          echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: manhlinh210/rust_aas_edge_client:${{ env.NEXT_VERSION }}
          platforms: ${{ matrix.docker_platform }}
      
      - name: Tag the new version in Git
        run: |
          git tag $NEXT_VERSION
          git push origin $NEXT_VERSION
